/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_SnackAttack = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/components/shared/SnackAttack');
var /* istanbul ignore next */_reactAutobind = require('react-autobind'); /* istanbul ignore next */var _reactAutobind2 = _interopRequireDefault(_reactAutobind);
var /* istanbul ignore next */_edgeeSlingshot = require('meteor/edgee:slingshot');
var /* istanbul ignore next */_reactDropzone = require('react-dropzone'); /* istanbul ignore next */var _reactDropzone2 = _interopRequireDefault(_reactDropzone);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

AvatarEditor = function (_React$Component) {_inherits(AvatarEditor, _React$Component);
	function /* istanbul ignore next */AvatarEditor(props) {/* istanbul ignore next */_classCallCheck(this, AvatarEditor);var _this = _possibleConstructorReturn(this, (AvatarEditor.__proto__ || Object.getPrototypeOf(AvatarEditor)).call(this,
		props));

		/* istanbul ignore next */_this.state = {
			avatarUrl: Meteor.user() && Meteor.user().profile && Meteor.user().profile.avatarUrl ? Meteor.user().profile.avatarUrl : props.defaultAvatarUrl };


		// binding users
		/* istanbul ignore next */(0, _reactAutobind2.default)( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;
	}_createClass(AvatarEditor, [{ key: 'preventDefault', value: function preventDefault(

		event) {
			event.preventDefault();
		} }, { key: 'onDrop', value: function onDrop(

		acceptedFiles, rejectedFiles) {/* istanbul ignore next */var _this2 = this;
			var context = { type: 'user' };
			var uploader = new /* istanbul ignore next */_edgeeSlingshot.Slingshot.Upload('uploads', context);

			if (rejectedFiles && rejectedFiles.length) {
				/* istanbul ignore next */(0, _SnackAttack.sendSnack)('There was an error uploading your profile picture');
			}

			uploader.send(acceptedFiles[0], function (error, downloadUrl) {
				if (error) {
					// Log service detailed response
					console.error('Error uploading', uploader.xhr.response);
					/* istanbul ignore next */(0, _SnackAttack.sendSnack)(error);
				} else {
					Meteor.users.update({ _id: Meteor.userId() }, {
						$set: {
							'profile.avatarUrl': downloadUrl } });



					/* istanbul ignore next */_this2.setState({ avatarUrl: downloadUrl });

					/* istanbul ignore next */(0, _SnackAttack.sendSnack)('Profile picture has been uploaded');
				}
			});
		} }, { key: 'render', value: function render()

		{
			return (
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactDropzone2.default, /* istanbul ignore next */{ className: 'dropzone', onDrop: this.onDrop, multiple: false, accept: 'image/*' },
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'user-profile-picture-container' },
						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'user-profile-picture' },
							/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'img', /* istanbul ignore next */{ alt: 'avatar', src: this.state.avatarUrl }),

							/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{
									className: 'upload-profile-picture',
									onClick: this.handleSelectFile },

								/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'i', /* istanbul ignore next */{ className: 'mdi mdi-image-area' }),
								/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'help-text' }, /* istanbul ignore next */'Select to upload or drag and drop image.'))))));







		} }]);return AvatarEditor;}( /* istanbul ignore next */_react2.default.Component); /* istanbul ignore next */exports.default = AvatarEditor;


AvatarEditor.propTypes = {
	defaultAvatarUrl: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired };


AvatarEditor.defaultProps = {
	defaultAvatarUrl: '' };