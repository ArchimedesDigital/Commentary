/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _debounce2 = require('lodash/debounce');var _debounce3 = _interopRequireDefault(_debounce2);var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_meteor = require('meteor/meteor');
var /* istanbul ignore next */_session = require('meteor/session');
var /* istanbul ignore next */_TextField = require('material-ui/TextField'); /* istanbul ignore next */var _TextField2 = _interopRequireDefault(_TextField);
var /* istanbul ignore next */_reactMeteorData = require('meteor/react-meteor-data');



var /* istanbul ignore next */_commenters = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/api/collections/commenters'); /* istanbul ignore next */var _commenters2 = _interopRequireDefault(_commenters);
var /* istanbul ignore next */_keywords = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/api/collections/keywords'); /* istanbul ignore next */var _keywords2 = _interopRequireDefault(_keywords);
var /* istanbul ignore next */_referenceWorks = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/api/collections/referenceWorks'); /* istanbul ignore next */var _referenceWorks2 = _interopRequireDefault(_referenceWorks);
var /* istanbul ignore next */_works = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/api/collections/works'); /* istanbul ignore next */var _works2 = _interopRequireDefault(_works);


var /* istanbul ignore next */_SearchDropdowns = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/components/header/SearchDropdowns');
var /* istanbul ignore next */_LineRangeSlider = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/components/header/LineRangeSlider'); /* istanbul ignore next */var _LineRangeSlider2 = _interopRequireDefault(_LineRangeSlider);
var /* istanbul ignore next */_SearchToolDropdown = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/components/header/SearchToolDropdown'); /* istanbul ignore next */var _SearchToolDropdown2 = _interopRequireDefault(_SearchToolDropdown);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} // api:
// components:

/*
	helpers
*/
var getLineFrom = function getLineFrom(filters) {

	var filterLineFrom = filters.find(function (filter) /* istanbul ignore next */{return filter.key === 'lineFrom';});

	var lineFrom = null;
	if (filterLineFrom) {
		lineFrom = filterLineFrom.values[0];
	}

	return lineFrom;
};

var getLineTo = function getLineTo(filters) {

	var filterLineTo = filters.find(function (filter) /* istanbul ignore next */{return filter.key === 'lineTo';});

	var lineTo = null;
	if (filterLineTo) {
		lineTo = filterLineTo.values[0];
	}

	return lineTo;
};

var getWorkInFilter = function getWorkInFilter(filters) {
	var workInFilter = false;
	filters.forEach(function (filter) {
		if (filter.key === 'works') {
			workInFilter = true;
		}
	});
	return workInFilter;
};


/*
   	BEGIN CommentarySearchToolbar
   */ /* istanbul ignore next */var
CommentarySearchToolbar = function (_React$Component) {_inherits(CommentarySearchToolbar, _React$Component);

















































	function /* istanbul ignore next */CommentarySearchToolbar(props) {/* istanbul ignore next */_classCallCheck(this, CommentarySearchToolbar);var _this = _possibleConstructorReturn(this, (CommentarySearchToolbar.__proto__ || Object.getPrototypeOf(CommentarySearchToolbar)).call(this,
		props));

		/* istanbul ignore next */_this.state = {
			searchDropdownOpen: '',
			moreDropdownOpen: false,
			activeWorkNew: null,
			selectedWork: 'Book' };


		// methods:
		if (props.handleChangeTextsearch) /* istanbul ignore next */_this.handleChangeTextsearch = /* istanbul ignore next */(0, _debounce3.default)(props.handleChangeTextsearch, 300);
		/* istanbul ignore next */_this.toggleSearchDropdown = /* istanbul ignore next */_this.toggleSearchDropdown.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.toggleMoreDropdown = /* istanbul ignore next */_this.toggleMoreDropdown.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.switchToHymns = /* istanbul ignore next */_this.switchToHymns.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.switchToBooks = /* istanbul ignore next */_this.switchToBooks.bind( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;
	}_createClass(CommentarySearchToolbar, [{ key: 'toggleSearchDropdown', value: function toggleSearchDropdown(

		targetDropdown) {
			if (this.state.searchDropdownOpen === targetDropdown) {
				this.setState({
					searchDropdownOpen: '' });

			} else {
				this.setState({
					searchDropdownOpen: targetDropdown });

			}
		} }, { key: 'toggleMoreDropdown', value: function toggleMoreDropdown()

		{
			this.setState({
				moreDropdownOpen: !this.state.moreDropdownOpen });

		} }, { key: 'switchToHymns', value: function switchToHymns()

		{
			this.setState({
				selectedWork: 'Hymn' });

		} }, { key: 'switchToBooks', value: function switchToBooks()

		{
			this.setState({
				selectedWork: 'Book' });

		} }, { key: 'render', value: function render()

		{/* istanbul ignore next */var _props =

			this.props,toggleSearchTerm = _props.toggleSearchTerm,filters = _props.filters,addCommentPage = _props.addCommentPage,keywords = _props.keywords,keyideas = _props.keyideas,commenters = _props.commenters,referenceWorks = _props.referenceWorks,works = _props.works,handleChangeLineN = _props.handleChangeLineN; /* istanbul ignore next */var _state =
			this.state,searchDropdownOpen = _state.searchDropdownOpen,moreDropdownOpen = _state.moreDropdownOpen,selectedWork = _state.selectedWork;

			var lineFrom = getLineFrom(filters);
			var lineTo = getLineTo(filters);
			var workInFilter = getWorkInFilter(filters);

			return (
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */null,
					!addCommentPage ?
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'search-tool text-search text-search--header' },
						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TextField2.default, /* istanbul ignore next */{
							hintText: '',
							floatingLabelText: 'Search',
							onChange: this.handleChangeTextsearch })) :


					'',

					!addCommentPage &&
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchDropdowns.KeywordsDropdown, /* istanbul ignore next */{
						keywords: keywords,
						searchDropdownOpen: searchDropdownOpen,
						toggleSearchDropdown: this.toggleSearchDropdown,
						toggleSearchTerm: toggleSearchTerm,
						filters: filters }),


					!addCommentPage &&
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchDropdowns.KeyideasDropdown, /* istanbul ignore next */{
						keyideas: keyideas,
						searchDropdownOpen: searchDropdownOpen,
						toggleSearchDropdown: this.toggleSearchDropdown,
						toggleSearchTerm: toggleSearchTerm,
						filters: filters }),


					!addCommentPage &&
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchDropdowns.CommentatorsDropdown, /* istanbul ignore next */{
						commenters: commenters,
						searchDropdownOpen: searchDropdownOpen,
						toggleSearchDropdown: this.toggleSearchDropdown,
						toggleSearchTerm: toggleSearchTerm,
						filters: filters }),


					!addCommentPage &&
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchDropdowns.ReferenceDropdown, /* istanbul ignore next */{
						reference: referenceWorks,
						searchDropdownOpen: searchDropdownOpen,
						toggleSearchDropdown: this.toggleSearchDropdown,
						toggleSearchTerm: toggleSearchTerm,
						filters: filters }),


					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchDropdowns.WorksDropdown, /* istanbul ignore next */{
						works: works,
						searchDropdownOpen: searchDropdownOpen,
						toggleSearchDropdown: this.toggleSearchDropdown,
						toggleSearchTerm: toggleSearchTerm,
						filters: filters }),


					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchDropdowns.SubworksDropdown, /* istanbul ignore next */{
						works: works,
						searchDropdownOpen: searchDropdownOpen,
						toggleSearchDropdown: this.toggleSearchDropdown,
						toggleSearchTerm: toggleSearchTerm,
						selectedWork: selectedWork,
						workInFilter: workInFilter,
						filters: filters }),


					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{
							style: { width: 250, padding: '10px 20px' },
							className: /* istanbul ignore next */'line-search ' + (workInFilter === false ? 'disabled' : '') },

						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_LineRangeSlider2.default, /* istanbul ignore next */{
							handleChangeLineN: handleChangeLineN,
							lineFrom: lineFrom,
							lineTo: lineTo }),

						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'disabled-screen' })),


					!addCommentPage &&
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchToolDropdown2.default, /* istanbul ignore next */{
							name: 'more',
							open: moreDropdownOpen,
							toggle: this.toggleMoreDropdown,
							disabled: false },

						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'search-tool text-search' },
							/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_TextField2.default, /* istanbul ignore next */{
								hintText: '',
								floatingLabelText: 'Search',
								onChange: this.handleChangeTextsearch })),



						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchDropdowns.KeywordsDropdown, /* istanbul ignore next */{
							keywords: keywords,
							searchDropdownOpen: searchDropdownOpen,
							toggleSearchDropdown: this.toggleSearchDropdown,
							toggleSearchTerm: toggleSearchTerm,
							filters: filters }),


						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchDropdowns.KeyideasDropdown, /* istanbul ignore next */{
							keyideas: keyideas,
							searchDropdownOpen: searchDropdownOpen,
							toggleSearchDropdown: this.toggleSearchDropdown,
							toggleSearchTerm: toggleSearchTerm,
							filters: filters }),


						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchDropdowns.CommentatorsDropdown, /* istanbul ignore next */{
							commenters: commenters,
							searchDropdownOpen: searchDropdownOpen,
							toggleSearchDropdown: this.toggleSearchDropdown,
							toggleSearchTerm: toggleSearchTerm,
							filters: filters }),


						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchDropdowns.ReferenceDropdown, /* istanbul ignore next */{
							reference: referenceWorks,
							searchDropdownOpen: searchDropdownOpen,
							toggleSearchDropdown: this.toggleSearchDropdown,
							toggleSearchTerm: toggleSearchTerm,
							filters: filters }))));






		} }]);return CommentarySearchToolbar;}( /* istanbul ignore next */_react2.default.Component);

/*
                                                                                                	END CommentarySearchToolbar
                                                                                                */ /* istanbul ignore next */CommentarySearchToolbar.propTypes = { filters: /* istanbul ignore next */_react2.default.PropTypes.any.isRequired, // eslint-disable-line react/forbid-prop-types
	toggleSearchTerm: /* istanbul ignore next */_react2.default.PropTypes.func.isRequired, handleChangeTextsearch: /* istanbul ignore next */_react2.default.PropTypes.func, handleChangeLineN: /* istanbul ignore next */_react2.default.PropTypes.func.isRequired, addCommentPage: /* istanbul ignore next */_react2.default.PropTypes.bool.isRequired, isTest: /* istanbul ignore next */_react2.default.PropTypes.bool, // from createContainer:
	keywords: /* istanbul ignore next */_react2.default.PropTypes.arrayOf( /* istanbul ignore next */_react2.default.PropTypes.shape({ _id: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired, title: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired, slug: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired })), keyideas: /* istanbul ignore next */_react2.default.PropTypes.arrayOf( /* istanbul ignore next */_react2.default.PropTypes.shape({ _id: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired, title: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired, slug: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired })), commenters: /* istanbul ignore next */_react2.default.PropTypes.arrayOf( /* istanbul ignore next */_react2.default.PropTypes.shape({ _id: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired, name: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired, slug: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired })), referenceWorks: /* istanbul ignore next */_react2.default.PropTypes.arrayOf( /* istanbul ignore next */_react2.default.PropTypes.shape({ _id: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired, title: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired })), works: /* istanbul ignore next */_react2.default.PropTypes.arrayOf( /* istanbul ignore next */_react2.default.PropTypes.shape({ _id: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired, title: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired, slug: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired, subworks: /* istanbul ignore next */_react2.default.PropTypes.arrayOf( /* istanbul ignore next */_react2.default.PropTypes.shape({ n: /* istanbul ignore next */_react2.default.PropTypes.number.isRequired, title: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired })) })) }; /* istanbul ignore next */CommentarySearchToolbar.defaultProps = { keywords: [], keyideas: [], commenters: [], referenceWorks: [], works: [], handleChangeTextsearch: null };
var commentarySearchToolbarContainer = /* istanbul ignore next */(0, _reactMeteorData.createContainer)(function ( /* istanbul ignore next */_ref) {/* istanbul ignore next */var addCommentPage = _ref.addCommentPage;

	var tenantId = /* istanbul ignore next */_session.Session.get('tenantId');

	// SUBSCRIPTIONS:
	if (!addCommentPage) {
		/* istanbul ignore next */_meteor.Meteor.subscribe('commenters');
		/* istanbul ignore next */_meteor.Meteor.subscribe('keywords.all', { tenantId: tenantId });
		/* istanbul ignore next */_meteor.Meteor.subscribe('referenceWorks', tenantId);
	}
	/* istanbul ignore next */_meteor.Meteor.subscribe('works', tenantId);

	return {
		keyideas: /* istanbul ignore next */_keywords2.default.find({ type: 'idea' }).fetch(),
		keywords: /* istanbul ignore next */_keywords2.default.find({ type: 'word' }).fetch(),
		commenters: /* istanbul ignore next */_commenters2.default.find().fetch(),
		works: /* istanbul ignore next */_works2.default.find({}, { sort: { order: 1 } }).fetch(),
		referenceWorks: /* istanbul ignore next */_referenceWorks2.default.find({}, { sort: { title: 1 } }).fetch() };


}, CommentarySearchToolbar); /* istanbul ignore next */exports.default =

commentarySearchToolbarContainer;