/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_AvatarIcon = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/components/avatar/AvatarIcon'); /* istanbul ignore next */var _AvatarIcon2 = _interopRequireDefault(_AvatarIcon);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var getWorkTitle = function getWorkTitle(commentGroup) {
	var workTitle = commentGroup.work.title;
	if (workTitle === 'Homeric Hymns') {
		workTitle = 'Hymns';
	}
	return workTitle;
};

var CommentGroupMeta = function CommentGroupMeta( /* istanbul ignore next */_ref) /* istanbul ignore next */{var hideLemma = _ref.hideLemma,commentGroup = _ref.commentGroup;return (
		/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'comment-group-meta' },
			hideLemma === false ?
			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'comment-group-meta-inner comment-group-meta-ref' },
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'comment-group-ref' },
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'comment-group-ref-above' },
						getWorkTitle(commentGroup), /* istanbul ignore next */' ', commentGroup.subwork.title),

					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h2', /* istanbul ignore next */{ className: 'comment-group-ref-below' },
						commentGroup.lineFrom, commentGroup.lineTo ? /* istanbul ignore next */'-' + commentGroup.lineTo : '')),



				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'comment-group-commenters' },

					commentGroup.commenters.map(function (commenter) /* istanbul ignore next */{return (
							/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{
									key: commenter._id,
									className: 'comment-author',
									/* istanbul ignore next */'data-commenter-id': commenter._id },

								/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'comment-author-name' },
									commenter.name),

								/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'a', /* istanbul ignore next */{
										className: 'comment-author-image-wrap paper-shadow',
										href: /* istanbul ignore next */'/commenters/' + commenter.slug },

									/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_AvatarIcon2.default, /* istanbul ignore next */{
										avatar:
										commenter && 'avatar' in commenter ?
										commenter.avatar.src :
										null }))));}))) :







			''));};


CommentGroupMeta.propTypes = {
	hideLemma: /* istanbul ignore next */_react2.default.PropTypes.bool,
	commentGroup: /* istanbul ignore next */_react2.default.PropTypes.shape({
		subwork: /* istanbul ignore next */_react2.default.PropTypes.shape({
			title: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired }),

		lineFrom: /* istanbul ignore next */_react2.default.PropTypes.number.isRequired,
		lineTo: /* istanbul ignore next */_react2.default.PropTypes.number,
		commenters: /* istanbul ignore next */_react2.default.PropTypes.arrayOf( /* istanbul ignore next */_react2.default.PropTypes.shape({
			_id: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired,
			name: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired,
			slug: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired,
			avatar: /* istanbul ignore next */_react2.default.PropTypes.shape({
				src: /* istanbul ignore next */_react2.default.PropTypes.string }) })) }) };




CommentGroupMeta.defaultProps = {
	hideLemma: false,
	commentGroup: null }; /* istanbul ignore next */exports.default =


CommentGroupMeta;