/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_throttleDebounce = require('throttle-debounce'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var id = 'line-range'; /* istanbul ignore next */var

LineRangeSlider = function (_React$Component) {_inherits(LineRangeSlider, _React$Component);function LineRangeSlider() {_classCallCheck(this, LineRangeSlider);return _possibleConstructorReturn(this, (LineRangeSlider.__proto__ || Object.getPrototypeOf(LineRangeSlider)).apply(this, arguments));}_createClass(LineRangeSlider, [{ key: 'componentDidMount', value: function componentDidMount()

		{/* istanbul ignore next */var _props =

			this.props,handleChangeLineN = _props.handleChangeLineN,lineFrom = _props.lineFrom,lineTo = _props.lineTo;
			$( /* istanbul ignore next */'#' + id).ionRangeSlider({
				type: 'double',
				min: 1,
				max: 909,
				grid: true,
				prettify_enabled: true,
				prettify_separator: ',',
				prefix: 'Line: ',
				values_separator: ' to ',
				onChange: /* istanbul ignore next */(0, _throttleDebounce.debounce)(500, handleChangeLineN),
				from: lineFrom,
				to: lineTo });

		} }, { key: 'render', value: function render()

		{
			return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ id: id }));
		} }]);return LineRangeSlider;}( /* istanbul ignore next */_react2.default.Component);


LineRangeSlider.propTypes = {
	handleChangeLineN: /* istanbul ignore next */_react2.default.PropTypes.func.isRequired,
	lineFrom: /* istanbul ignore next */_react2.default.PropTypes.number,
	lineTo: /* istanbul ignore next */_react2.default.PropTypes.number };

LineRangeSlider.defaultProps = {
	lineFrom: null,
	lineTo: null }; /* istanbul ignore next */exports.default =


LineRangeSlider;