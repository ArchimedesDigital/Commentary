/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_meteor = require('meteor/meteor');
var /* istanbul ignore next */_reactMeteorData = require('meteor/react-meteor-data');
var /* istanbul ignore next */_session = require('meteor/session');
var /* istanbul ignore next */_getMuiTheme = require('material-ui/styles/getMuiTheme'); /* istanbul ignore next */var _getMuiTheme2 = _interopRequireDefault(_getMuiTheme);


var /* istanbul ignore next */_muiTheme = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/lib/muiTheme'); /* istanbul ignore next */var _muiTheme2 = _interopRequireDefault(_muiTheme);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}


var AnnotationTextNode = /* istanbul ignore next */_react2.default.createClass({ /* istanbul ignore next */displayName: 'AnnotationTextNode',

	propTypes: {
		annotation: /* istanbul ignore next */_react2.default.PropTypes.object,
		work: /* istanbul ignore next */_react2.default.PropTypes.object,
		isOdd: /* istanbul ignore next */_react2.default.PropTypes.bool },


	childContextTypes: {
		muiTheme: /* istanbul ignore next */_react2.default.PropTypes.object.isRequired }, /* istanbul ignore next */


	getChildContext: function getChildContext() {
		return { muiTheme: /* istanbul ignore next */(0, _getMuiTheme2.default)( /* istanbul ignore next */_muiTheme2.default) };
	}, /* istanbul ignore next */

	getTextLocation: function getTextLocation() {
		var text = this.data.text;
		var location = '';
		var textN = '';

		if ('n_1' in text) {
			location += text.n_1;
			textN = text.n_1;
		}
		if ('n_2' in text) {
			location += /* istanbul ignore next */'.' + text.n_2;
			textN = text.n_2;
		}
		if ('n_3' in text) {
			location += /* istanbul ignore next */'.' + text.n_3;
			textN = text.n_3;
		}
		if ('n_4' in text) {
			location += /* istanbul ignore next */'.' + text.n_4;
			textN = text.n_4;
		}
		if ('n_5' in text) {
			location += /* istanbul ignore next */'.' + text.n_5;
			textN = text.n_5;
		}

		return {
			location: location,
			textN: textN };

	}, /* istanbul ignore next */

	handleClick: function handleClick() {

	}, /* istanbul ignore next */


	render: function render() {/* istanbul ignore next */var _this = this;
		// const text = this.props.text;
		var _props = this.props,work = _props.work,annotation = _props.annotation;
		var textClasses = 'text-node bookmark-text-node annotation-text-node clearfix';
		// const textLocation = this.getTextLocation();
		var textLocation = '';
		var workTitle = '';
		var link = '';

		if (!annotation) {
			return null;
		}

		if (work) {
			workTitle = work.english_title;
			link = /* istanbul ignore next */'/works/' + work._id + '/' + work.slug + '?location=' + textLocation.location;
		}

		if (this.props.isOdd) {
			textClasses = /* istanbul ignore next */textClasses + ' bookmark-text-node--odd';
		}

		if (parseInt(textLocation.textN, 10) % 5 === 0) {
			textClasses = /* istanbul ignore next */textClasses + ' show-number';
		}

		return (
			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'a', /* istanbul ignore next */{
					className: textClasses,
					/* istanbul ignore next */'data-id': annotation._id
					// data-loc={textLocation.location}
					, href: link },

				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'text-left-header' },
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h2', /* istanbul ignore next */{ className: 'section-numbering' }, Utils.trunc(workTitle, 40), /* istanbul ignore next */' ', textLocation.location)),


				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{
						className: 'text-html',
						ref: function /* istanbul ignore next */ref(_ref) {
							/* istanbul ignore next */_this.anchorEl = _ref;
							return _ref;
						} },

					annotation.content && annotation.content.length ?
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */null, annotation.content) :

					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */null, /* istanbul ignore next */'[ . . . ]'))));





	} }); // lib:


var AnnotationTextNodeContainer = /* istanbul ignore next */(0, _reactMeteorData.createContainer)(function ( /* istanbul ignore next */_ref2) {/* istanbul ignore next */var text = _ref2.text;
	var work = null;

	if (text) {
		var query = { _id: text.work };
		var handleWorks = /* istanbul ignore next */_meteor.Meteor.subscribe('works', /* istanbul ignore next */_session.Session.get('tenantId'));
		work = Works.findOne(query);
	}

	return {
		work: work };

}, AnnotationTextNode); /* istanbul ignore next */exports.default =

AnnotationTextNodeContainer;