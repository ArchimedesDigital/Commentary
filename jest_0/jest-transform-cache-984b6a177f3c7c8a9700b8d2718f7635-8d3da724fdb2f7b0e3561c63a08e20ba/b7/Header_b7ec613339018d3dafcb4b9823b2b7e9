/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_meteor = require('meteor/meteor');
var /* istanbul ignore next */_reactMeteorData = require('meteor/react-meteor-data');
var /* istanbul ignore next */_session = require('meteor/session');
var /* istanbul ignore next */_FlatButton = require('material-ui/FlatButton'); /* istanbul ignore next */var _FlatButton2 = _interopRequireDefault(_FlatButton);
var /* istanbul ignore next */_IconButton = require('material-ui/IconButton'); /* istanbul ignore next */var _IconButton2 = _interopRequireDefault(_IconButton);


var /* istanbul ignore next */_settings = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/api/collections/settings'); /* istanbul ignore next */var _settings2 = _interopRequireDefault(_settings);
var /* istanbul ignore next */_tenants = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/api/collections/tenants'); /* istanbul ignore next */var _tenants2 = _interopRequireDefault(_tenants);


var /* istanbul ignore next */_ModalLogin = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/layouts/auth/ModalLogin'); /* istanbul ignore next */var _ModalLogin2 = _interopRequireDefault(_ModalLogin);
var /* istanbul ignore next */_ModalSignup = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/layouts/auth/ModalSignup'); /* istanbul ignore next */var _ModalSignup2 = _interopRequireDefault(_ModalSignup);
var /* istanbul ignore next */_LeftMenu = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/layouts/header/LeftMenu'); /* istanbul ignore next */var _LeftMenu2 = _interopRequireDefault(_LeftMenu);
var /* istanbul ignore next */_CommentarySearchToolbar = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/layouts/header/CommentarySearchToolbar'); /* istanbul ignore next */var _CommentarySearchToolbar2 = _interopRequireDefault(_CommentarySearchToolbar);
var /* istanbul ignore next */_CommentarySearchPanel = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/layouts/header/CommentarySearchPanel'); /* istanbul ignore next */var _CommentarySearchPanel2 = _interopRequireDefault(_CommentarySearchPanel);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} // api:
// layouts:
/*
	helpers
*/
var styles = {
	flatButton: {
		width: 'auto',
		minWidth: 'none',
		height: '80px',
		padding: '25px 5px' },

	flatIconButton: {
		padding: '10px 20px',
		width: 'auto',
		minWidth: 'none',
		height: '55px' },

	leftMenuToggle: {
		padding: '5px 10px',
		width: 'auto',
		minWidth: 'none',
		height: 'auto',
		margin: '24px 20px' },

	lineSearch: {
		width: 250,
		padding: '10px 15px' } };




/*
                            	BEGIN Header
                            */ /* istanbul ignore next */var
Header = function (_React$Component) {_inherits(Header, _React$Component);




























	function /* istanbul ignore next */Header(props) {/* istanbul ignore next */_classCallCheck(this, Header);var _this = _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).call(this,
		props));

		/* istanbul ignore next */_this.state = {
			leftMenuOpen: false,
			rightMenuOpen: false,
			searchEnabled: props.initialSearchEnabled,
			searchDropdownOpen: '',
			subworks: [],
			activeWork: '',
			modalLoginLowered: false,
			modalSignupLowered: false };


		// methods:
		/* istanbul ignore next */_this.toggleSearchMode = /* istanbul ignore next */_this.toggleSearchMode.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.toggleLeftMenu = /* istanbul ignore next */_this.toggleLeftMenu.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.closeLeftMenu = /* istanbul ignore next */_this.closeLeftMenu.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.toggleRightMenu = /* istanbul ignore next */_this.toggleRightMenu.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.closeRightMenu = /* istanbul ignore next */_this.closeRightMenu.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.toggleSearchDropdown = /* istanbul ignore next */_this.toggleSearchDropdown.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.toggleWorkSearchTerm = /* istanbul ignore next */_this.toggleWorkSearchTerm.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.showLoginModal = /* istanbul ignore next */_this.showLoginModal.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.showSignupModal = /* istanbul ignore next */_this.showSignupModal.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.closeLoginModal = /* istanbul ignore next */_this.closeLoginModal.bind( /* istanbul ignore next */_this);
		/* istanbul ignore next */_this.closeSignupModal = /* istanbul ignore next */_this.closeSignupModal.bind( /* istanbul ignore next */_this); /* istanbul ignore next */return _this;
	}_createClass(Header, [{ key: 'toggleSearchMode', value: function toggleSearchMode()

		{/* istanbul ignore next */var

			addCommentPage = this.props.addCommentPage; /* istanbul ignore next */var
			searchEnabled = this.state.searchEnabled;

			if (location.pathname.indexOf('/commentary') === 0 || addCommentPage) {
				this.setState({
					searchEnabled: !searchEnabled });

			} else location.href = '/commentary';
		} }, { key: 'toggleLeftMenu', value: function toggleLeftMenu()

		{
			this.setState({
				leftMenuOpen: !this.state.leftMenuOpen });

		} }, { key: 'closeLeftMenu', value: function closeLeftMenu()

		{
			this.setState({
				leftMenuOpen: false });

		} }, { key: 'toggleRightMenu', value: function toggleRightMenu()

		{
			this.setState({
				rightMenuOpen: !this.state.rightMenuOpen });

		} }, { key: 'closeRightMenu', value: function closeRightMenu()

		{
			this.setState({
				rightMenuOpen: false });

		} }, { key: 'toggleSearchDropdown', value: function toggleSearchDropdown(

		targetDropdown) {/* istanbul ignore next */var

			searchDropdownOpen = this.state.searchDropdownOpen;

			if (searchDropdownOpen === targetDropdown) {
				this.setState({
					searchDropdownOpen: '' });

			} else {
				this.setState({
					searchDropdownOpen: targetDropdown });

			}
		} }, { key: 'toggleWorkSearchTerm', value: function toggleWorkSearchTerm(

		key, value) {/* istanbul ignore next */var

			toggleSearchTerm = this.props.toggleSearchTerm; /* istanbul ignore next */var
			activeWork = this.state.activeWork;

			value.subworks.forEach(function (subwork, subworkIndex) {
				value.subworks[subworkIndex].work = value;
			});

			if (activeWork === value.slug) {
				this.setState({
					subworks: [],
					activeWork: '' });

			} else {
				value.subworks.sort(function (a, b) {
					if (a.n < b.n) {
						return -1;
					}
					if (a.n > b.n) {
						return 1;
					}
					return 0;
				});
				this.setState({
					subworks: value.subworks,
					activeWork: value.slug });

			}

			toggleSearchTerm(key, value);
		} }, { key: 'showLoginModal', value: function showLoginModal()

		{
			this.setState({
				modalLoginLowered: true });

		} }, { key: 'showSignupModal', value: function showSignupModal()

		{
			this.setState({
				modalSignupLowered: true });

		} }, { key: 'closeLoginModal', value: function closeLoginModal()

		{
			this.setState({
				modalLoginLowered: false });

		} }, { key: 'closeSignupModal', value: function closeSignupModal()

		{
			this.setState({
				modalSignupLowered: false });

		} }, { key: 'render', value: function render()

		{/* istanbul ignore next */var _props =

			this.props,filters = _props.filters,isOnHomeView = _props.isOnHomeView,isTest = _props.isTest,toggleSearchTerm = _props.toggleSearchTerm,handleChangeTextsearch = _props.handleChangeTextsearch,handleChangeLineN = _props.handleChangeLineN,tenant = _props.tenant,settings = _props.settings,addCommentPage = _props.addCommentPage; /* istanbul ignore next */var _state =
			this.state,leftMenuOpen = _state.leftMenuOpen,rightMenuOpen = _state.rightMenuOpen,searchEnabled = _state.searchEnabled,modalSignupLowered = _state.modalSignupLowered,modalLoginLowered = _state.modalLoginLowered;

			return (
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null,
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_LeftMenu2.default, /* istanbul ignore next */{
						open: leftMenuOpen,
						closeLeftMenu: this.closeLeftMenu }),


					!isOnHomeView &&
					toggleSearchTerm &&
					handleChangeTextsearch &&
					handleChangeLineN ?

					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CommentarySearchPanel2.default, /* istanbul ignore next */{
						toggleSearchTerm: toggleSearchTerm,
						handleChangeTextsearch: handleChangeTextsearch,
						handleChangeLineN: handleChangeLineN,
						open: rightMenuOpen,
						closeRightMenu: this.closeRightMenu,
						filters: filters,
						isTest: isTest }) :

					'',
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'header', /* istanbul ignore next */null,
						!searchEnabled ?
						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'md-menu-toolbar' },
							/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'toolbar-tools' },
								/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_IconButton2.default, /* istanbul ignore next */{
									className: 'left-drawer-toggle',
									style: styles.leftMenuToggle,
									iconClassName: 'mdi mdi-menu',
									onClick: this.toggleLeftMenu }),


								/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'a', /* istanbul ignore next */{ href: '/', className: 'header-home-link' },
									/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h3', /* istanbul ignore next */{ className: 'logo' }, settings ? settings.name : undefined)),


								tenant && !tenant.isAnnotation &&
								/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'search-toggle' },
									/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_IconButton2.default, /* istanbul ignore next */{
										className: 'search-button right-drawer-toggle',
										onClick: this.toggleRightMenu,
										iconClassName: 'mdi mdi-magnify' })),




								/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'header-section-wrap nav-wrap collapse' },
									tenant && !tenant.isAnnotation &&
									/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */null,
										/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FlatButton2.default, /* istanbul ignore next */{
											label: 'Commentary',
											href: '/commentary',
											style: styles.flatButton }),

										/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FlatButton2.default, /* istanbul ignore next */{
											label: 'About',
											href: '/about',
											style: styles.flatButton })),



									/* istanbul ignore next */_meteor.Meteor.user() ?
									/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null,
										Roles.userIsInRole( /* istanbul ignore next */_meteor.Meteor.userId(), ['editor', 'admin', 'commenter']) ?
										/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'user-header-links admin-header-links' },
											/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FlatButton2.default, /* istanbul ignore next */{
												href: '/profile',
												label: 'Profile',
												className: '',
												style: styles.flatButton }),

											tenant && !tenant.isAnnotation &&
											/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */null,
												/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FlatButton2.default, /* istanbul ignore next */{
													href: '/commentary/create',
													label: 'Add Comment',
													className: '',
													style: styles.flatButton }),

												/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FlatButton2.default, /* istanbul ignore next */{
													href: '/keywords/create',
													label: 'Add Keyword/Idea',
													className: '',
													style: styles.flatButton }))) :





										/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'user-header-links' },
											/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FlatButton2.default, /* istanbul ignore next */{
												href: '/profile',
												label: 'Profile',
												className: '',
												style: styles.flatButton }))) :





									/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null,
										/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FlatButton2.default, /* istanbul ignore next */{
											label: 'Login',
											onClick: tenant && !tenant.isAnnotation ? this.showLoginModal : undefined,
											href: tenant && tenant.isAnnotation ? '/sign-in' : '',
											style: styles.flatButton,
											className: 'account-button account-button-login' }),

										/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_FlatButton2.default, /* istanbul ignore next */{
											label: 'Join the Community',
											onClick: tenant && !tenant.isAnnotation ? this.showSignupModal : undefined,
											href: tenant && tenant.isAnnotation ? '/sign-up' : '',
											style: styles.flatButton,
											className: 'account-button account-button-login' })),



									tenant && !tenant.isAnnotation &&
									/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'search-toggle' },
										/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_IconButton2.default, /* istanbul ignore next */{
											className: 'search-button',
											onClick: this.toggleSearchMode,
											iconClassName: 'mdi mdi-magnify' }))))) :







						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null,
							tenant && !tenant.isAnnotation &&
							/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'md-menu-toolbar' }, /* istanbul ignore next */' ',
								/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'toolbar-tools' },
									/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_IconButton2.default, /* istanbul ignore next */{
										className: 'left-drawer-toggle',
										style: styles.leftMenuToggle,
										iconClassName: 'mdi mdi-menu',
										onClick: this.toggleLeftMenu }),

									/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'search-toggle' },
										/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_IconButton2.default, /* istanbul ignore next */{
											className: 'search-button right-drawer-toggle',
											onClick: this.toggleRightMenu,
											iconClassName: 'mdi mdi-magnify' })),



									!isOnHomeView &&
									toggleSearchTerm &&
									handleChangeLineN ?

									/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'search-tools collapse' },

										/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CommentarySearchToolbar2.default, /* istanbul ignore next */{
											toggleSearchTerm: toggleSearchTerm,
											handleChangeTextsearch: handleChangeTextsearch,
											handleChangeLineN: handleChangeLineN,
											filters: filters,
											addCommentPage: addCommentPage,
											isTest: isTest }),

										/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'search-toggle' },
											/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_IconButton2.default, /* istanbul ignore next */{
												className: 'search-button',
												onClick: this.toggleSearchMode,
												iconClassName: 'mdi mdi-magnify' }))) :



									'')))),







					! /* istanbul ignore next */_meteor.Meteor.user() && modalLoginLowered &&
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ModalLogin2.default, /* istanbul ignore next */{
						lowered: modalLoginLowered,
						closeModal: this.closeLoginModal }),


					! /* istanbul ignore next */_meteor.Meteor.user() && modalSignupLowered &&
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ModalSignup2.default, /* istanbul ignore next */{
						lowered: modalSignupLowered,
						closeModal: this.closeSignupModal })));




		} }]);return Header;}( /* istanbul ignore next */_react2.default.Component);

/*
                                                                               	END Header
                                                                               */ /* istanbul ignore next */Header.propTypes = { filters: /* istanbul ignore next */_react2.default.PropTypes.any, // eslint-disable-line react/forbid-prop-types
	toggleSearchTerm: /* istanbul ignore next */_react2.default.PropTypes.func, handleChangeTextsearch: /* istanbul ignore next */_react2.default.PropTypes.func, handleChangeLineN: /* istanbul ignore next */_react2.default.PropTypes.func, initialSearchEnabled: /* istanbul ignore next */_react2.default.PropTypes.bool, addCommentPage: /* istanbul ignore next */_react2.default.PropTypes.bool, isOnHomeView: /* istanbul ignore next */_react2.default.PropTypes.bool, isTest: /* istanbul ignore next */_react2.default.PropTypes.bool, // from creatContainer:
	settings: /* istanbul ignore next */_react2.default.PropTypes.shape({ name: /* istanbul ignore next */_react2.default.PropTypes.string }), tenant: /* istanbul ignore next */_react2.default.PropTypes.shape({ subdomain: /* istanbul ignore next */_react2.default.PropTypes.string, isAnnotation: /* istanbul ignore next */_react2.default.PropTypes.bool }) }; /* istanbul ignore next */Header.defaultProps = { filters: [], initialSearchEnabled: false, addCommentPage: false, isOnHomeView: false }; /* istanbul ignore next */exports.default = /* istanbul ignore next */(0, _reactMeteorData.createContainer)(function () {

	var settingsHandle = /* istanbul ignore next */_meteor.Meteor.subscribe('settings.tenant', /* istanbul ignore next */_session.Session.get('tenantId'));

	return {
		settings: /* istanbul ignore next */_settings2.default.findOne({}),
		tenant: /* istanbul ignore next */_tenants2.default.findOne({ _id: /* istanbul ignore next */_session.Session.get('tenantId') }) };


}, Header);