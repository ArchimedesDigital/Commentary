/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

/*
                                                                                                                                                                                                                                                                                                                                   	helpers
                                                                                                                                                                                                                                                                                                                                   */
var getClassName = function getClassName(active, activeWork) {
	var className = 'search-term-button';

	if (active || activeWork) className += ' search-term-button--active';

	return className;
};


/*
   	BEGIN SearchTermButtonPanel
   */
var SearchTermButtonPanel = function SearchTermButtonPanel( /* istanbul ignore next */_ref) /* istanbul ignore next */{var active = _ref.active,activeWork = _ref.activeWork,toggleSearchTerm = _ref.toggleSearchTerm,label = _ref.label,searchTermKey = _ref.searchTermKey,value = _ref.value;return (
		/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{
				className: getClassName(active, activeWork),
				onClick: toggleSearchTerm.bind(null, searchTermKey, value) },

			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */null, label)));};


SearchTermButtonPanel.propTypes = {
	toggleSearchTerm: /* istanbul ignore next */_react2.default.PropTypes.func.isRequired,
	label: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired,
	searchTermKey: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired,
	value: /* istanbul ignore next */_react2.default.PropTypes.shape({}).isRequired,
	active: /* istanbul ignore next */_react2.default.PropTypes.bool,
	activeWork: /* istanbul ignore next */_react2.default.PropTypes.bool };

SearchTermButtonPanel.defaultProps = {
	active: false,
	activeWork: false };

/*
                      	END SearchTermButtonPanel
                      */ /* istanbul ignore next */exports.default =

SearchTermButtonPanel;