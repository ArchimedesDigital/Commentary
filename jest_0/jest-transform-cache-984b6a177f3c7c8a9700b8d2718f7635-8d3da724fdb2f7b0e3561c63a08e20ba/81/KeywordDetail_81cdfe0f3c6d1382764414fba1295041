/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactCookie = require('react-cookie'); /* istanbul ignore next */var _reactCookie2 = _interopRequireDefault(_reactCookie);
var /* istanbul ignore next */_meteor = require('meteor/meteor');
var /* istanbul ignore next */_session = require('meteor/session');
var /* istanbul ignore next */_reactMeteorData = require('meteor/react-meteor-data');

var /* istanbul ignore next */_getMuiTheme = require('material-ui/styles/getMuiTheme'); /* istanbul ignore next */var _getMuiTheme2 = _interopRequireDefault(_getMuiTheme);
var /* istanbul ignore next */_RaisedButton = require('material-ui/RaisedButton'); /* istanbul ignore next */var _RaisedButton2 = _interopRequireDefault(_RaisedButton);


var /* istanbul ignore next */_comments = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/api/collections/comments'); /* istanbul ignore next */var _comments2 = _interopRequireDefault(_comments);
var /* istanbul ignore next */_keywords = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/api/collections/keywords'); /* istanbul ignore next */var _keywords2 = _interopRequireDefault(_keywords);
var /* istanbul ignore next */_settings = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/api/collections/settings'); /* istanbul ignore next */var _settings2 = _interopRequireDefault(_settings);


var /* istanbul ignore next */_KeywordContext = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/components/keywords/KeywordContext'); /* istanbul ignore next */var _KeywordContext2 = _interopRequireDefault(_KeywordContext);
var /* istanbul ignore next */_BackgroundImageHolder = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/components/shared/BackgroundImageHolder'); /* istanbul ignore next */var _BackgroundImageHolder2 = _interopRequireDefault(_BackgroundImageHolder);
var /* istanbul ignore next */_KeywordCommentList = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/components/keywords/KeywordCommentList'); /* istanbul ignore next */var _KeywordCommentList2 = _interopRequireDefault(_KeywordCommentList);
var /* istanbul ignore next */_CommentsRecent = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/components/commentary/comments/CommentsRecent'); /* istanbul ignore next */var _CommentsRecent2 = _interopRequireDefault(_CommentsRecent);


var /* istanbul ignore next */_muiTheme = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/lib/muiTheme'); /* istanbul ignore next */var _muiTheme2 = _interopRequireDefault(_muiTheme);
var /* istanbul ignore next */_utils = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/lib/utils'); /* istanbul ignore next */var _utils2 = _interopRequireDefault(_utils);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} // lib
// components

var KeywordDetail = /* istanbul ignore next */_react2.default.createClass({ /* istanbul ignore next */displayName: 'KeywordDetail',

	propTypes: {
		keyword: /* istanbul ignore next */_react2.default.PropTypes.object,
		settings: /* istanbul ignore next */_react2.default.PropTypes.object,
		keywordComments: /* istanbul ignore next */_react2.default.PropTypes.array },


	childContextTypes: {
		muiTheme: /* istanbul ignore next */_react2.default.PropTypes.object.isRequired }, /* istanbul ignore next */


	getInitialState: function getInitialState() {
		return {
			keywordReferenceModalVisible: false,
			referenceTop: 0,
			referenceLeft: 0,
			keyword: '' };

	}, /* istanbul ignore next */

	getChildContext: function getChildContext() {
		return { muiTheme: /* istanbul ignore next */(0, _getMuiTheme2.default)( /* istanbul ignore next */_muiTheme2.default) };
	}, /* istanbul ignore next */

	deleteKeyword: function deleteKeyword() {/* istanbul ignore next */var
		keyword = this.props.keyword;
		/* istanbul ignore next */_meteor.Meteor.call('keywords.delete', /* istanbul ignore next */_reactCookie2.default.load('loginToken'), keyword._id, function (error, keywordId) {
			if (error) {
				console.log(keywordId, error);
			} else {
				FlowRouter.go('/keywords');
			}
		});
	}, /* istanbul ignore next */

	_keywordDescriptionOnClick: function _keywordDescriptionOnClick(e) {
		var $target = $(e.target);
		var upperOffset = 90;
		if ($target.hasClass('keyword-gloss')) {
			var keyword = $target.data().link.replace('/keywords/', '');
			this.setState({
				keywordReferenceModalVisible: true,
				referenceTop: $target.offset().top - upperOffset,
				referenceLeft: $target.offset().left + 160,
				keyword: keyword });

		}
	}, /* istanbul ignore next */

	_closeKeywordReference: function _closeKeywordReference() {
		this.setState({
			keywordReferenceModalVisible: false,
			referenceTop: 0,
			referenceLeft: 0,
			keyword: '' });

	}, /* istanbul ignore next */

	render: function render() {/* istanbul ignore next */var _props =
		this.props,keyword = _props.keyword,settings = _props.settings,keywordComments = _props.keywordComments;

		if (!keyword) {
			return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null));
		}

		/* istanbul ignore next */_utils2.default.setTitle( /* istanbul ignore next */keyword.title + ' | ' + settings.title);
		if (keyword.description) {
			/* istanbul ignore next */_utils2.default.setDescription( /* istanbul ignore next */_utils2.default.trunc(keyword.description, 150));
		}
		/* istanbul ignore next */_utils2.default.setMetaImage( /* istanbul ignore next */location.origin + '/images/apotheosis_homer.jpg');

		return (
			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'page keywords-page keywords-detail-page' },
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'content primary' },
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'section', /* istanbul ignore next */{ className: 'block header header-page cover parallax' },
						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_BackgroundImageHolder2.default, /* istanbul ignore next */{
							imgSrc: '/images/apotheosis_homer.jpg' }),


						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'container v-align-transform' },
							/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'grid inner' },
								/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'center-content' },
									/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'page-title-wrap' },
										/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h2', /* istanbul ignore next */{ className: 'page-title ' }, keyword.title),
										Roles.userIsInRole( /* istanbul ignore next */_meteor.Meteor.userId(), ['editor', 'admin', 'commenter']) ?
										/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null,
											/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_RaisedButton2.default, /* istanbul ignore next */{
												href: /* istanbul ignore next */'/keywords/' + keyword.slug + '/edit',
												className: 'cover-link light',
												label: 'Edit' }),

											/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_RaisedButton2.default, /* istanbul ignore next */{
												onClick: this.deleteKeyword,
												className: 'cover-link light',
												label: 'Delete' })) :


										''))))),






					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'section', /* istanbul ignore next */{ className: 'page-content' },
						keyword.lineFrom ?
						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_KeywordContext2.default, /* istanbul ignore next */{ keyword: keyword }) :
						'',

						keyword.description &&
						keyword.description.length &&
						keyword.description !== '<p></p>' ?

						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{
							className: 'keyword-description',
							dangerouslySetInnerHTML: { __html: keyword.description },
							onClick: this._keywordDescriptionOnClick }) :

						'',

						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'hr', /* istanbul ignore next */null),

						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h1', /* istanbul ignore next */null, /* istanbul ignore next */'Related comments'),

						/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_KeywordCommentList2.default, /* istanbul ignore next */{
							keywordComments: keywordComments })),




					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CommentsRecent2.default, /* istanbul ignore next */null),

					this.state.keywordReferenceModalVisible ?
					/* istanbul ignore next */_react2.default.createElement(KeywordReferenceModal, /* istanbul ignore next */{
						visible: this.state.keywordReferenceModalVisible,
						top: this.state.referenceTop,
						left: this.state.referenceLeft,
						keyword: this.state.keyword,
						close: this._closeKeywordReference }) :

					'')));




	} }); // api


var KeywordDetailContainer = /* istanbul ignore next */(0, _reactMeteorData.createContainer)(function ( /* istanbul ignore next */_ref) {/* istanbul ignore next */var slug = _ref.slug;
	// SUBSCRIPTIONS:
	/* istanbul ignore next */_meteor.Meteor.subscribe('keywords.slug', slug, /* istanbul ignore next */_session.Session.get('tenantId'));
	var settingsHandle = /* istanbul ignore next */_meteor.Meteor.subscribe('settings.tenant', /* istanbul ignore next */_session.Session.get('tenantId'));


	// FETCH DATA:
	var query = {
		slug: slug };

	var keyword = /* istanbul ignore next */_keywords2.default.findOne(query);

	var keywordComments = null;
	if (keyword) {
		var keywordCommentsQuery = { keywords: { $elemMatch: { _id: keyword._id } } };
		/* istanbul ignore next */_meteor.Meteor.subscribe('comments', keywordCommentsQuery);

		keywordComments = /* istanbul ignore next */_comments2.default.find(keywordCommentsQuery).fetch();
	}

	return {
		keyword: keyword,
		settings: settingsHandle.ready() ? /* istanbul ignore next */_settings2.default.findOne() : {},
		keywordComments: keywordComments };

}, KeywordDetail); /* istanbul ignore next */exports.default =

KeywordDetailContainer;