/* istanbul ignore next */'use strict';


var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_enzyme = require('enzyme');
var /* istanbul ignore next */_chai = require('chai'); /* istanbul ignore next */var _chai2 = _interopRequireDefault(_chai);
var /* istanbul ignore next */_sinon = require('sinon'); /* istanbul ignore next */var _sinon2 = _interopRequireDefault(_sinon);
var /* istanbul ignore next */_FlatButton = require('material-ui/FlatButton'); /* istanbul ignore next */var _FlatButton2 = _interopRequireDefault(_FlatButton);


var /* istanbul ignore next */_SearchToolDropdown = require('./SearchToolDropdown'); /* istanbul ignore next */var _SearchToolDropdown2 = _interopRequireDefault(_SearchToolDropdown);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} /* eslint-env mocha */ /* eslint-disable func-names, prefer-arrow-callback, import/no-extraneous-dependencies */

describe('SearchToolDropdown', function () {
	it('should render', function () {
		var toggle = /* istanbul ignore next */_sinon2.default.spy();
		var wrapper = /* istanbul ignore next */(0, _enzyme.shallow)(
		/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchToolDropdown2.default, /* istanbul ignore next */{
				name: 'TestDropdown',
				toggle: toggle,
				open: false,
				disabled: false },

			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */null, /* istanbul ignore next */'children')));


		/* istanbul ignore next */_chai2.default.assert.ok(wrapper.find( /* istanbul ignore next */_FlatButton2.default), 'should contain the Flatbutton child');
		/* istanbul ignore next */_chai2.default.assert.equal(wrapper.find( /* istanbul ignore next */_FlatButton2.default).node.props.label, 'TestDropdown');
		/* istanbul ignore next */_chai2.default.assert.ok(wrapper.find('p'), 'should render the children(<p> in this case)');
		/* istanbul ignore next */_chai2.default.assert.equal(wrapper.find('p').text(), 'children');
	});

	it('should render with dropdown open', function () {
		var toggle = /* istanbul ignore next */_sinon2.default.spy();
		var wrapper = /* istanbul ignore next */(0, _enzyme.shallow)(
		/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchToolDropdown2.default, /* istanbul ignore next */{
				name: 'TestDropdown',
				toggle: toggle,
				open: /* istanbul ignore next */true,
				disabled: false },

			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */null, /* istanbul ignore next */'children')));


		var flatButton = wrapper.find( /* istanbul ignore next */_FlatButton2.default);
		/* istanbul ignore next */_chai2.default.assert(wrapper.hasClass('open'));
		/* istanbul ignore next */_chai2.default.assert.ok(flatButton, 'should contain the Flatbutton child');
		/* istanbul ignore next */_chai2.default.assert.equal(flatButton.node.props.label, 'TestDropdown');
		/* istanbul ignore next */_chai2.default.assert.ok(wrapper.find('p'), 'should render the children(<p> in this case)');
		/* istanbul ignore next */_chai2.default.assert.equal(wrapper.find('p').text(), 'children');
	});

	it('should render with dropdown disabled', function () {
		var toggle = /* istanbul ignore next */_sinon2.default.spy();
		var wrapper = /* istanbul ignore next */(0, _enzyme.shallow)(
		/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchToolDropdown2.default, /* istanbul ignore next */{
				name: 'TestDropdown',
				toggle: toggle,
				open: false,
				disabled: /* istanbul ignore next */true },

			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */null, /* istanbul ignore next */'children')));


		var flatButton = wrapper.find( /* istanbul ignore next */_FlatButton2.default);
		/* istanbul ignore next */_chai2.default.assert.ok(flatButton, 'should contain the Flatbutton child');
		/* istanbul ignore next */_chai2.default.assert.equal(flatButton.node.props.label, 'TestDropdown');
		/* istanbul ignore next */_chai2.default.assert.equal(flatButton.node.props.disabled, true);
		/* istanbul ignore next */_chai2.default.assert.include(flatButton.node.props.className, 'search-tool-disabled');
		/* istanbul ignore next */_chai2.default.assert.ok(wrapper.find('p'), 'should render the children(<p> in this case)');
		/* istanbul ignore next */_chai2.default.assert.equal(wrapper.find('p').text(), 'children');
	});
	it('should call toggle function with correct values', function () {
		var toggle = /* istanbul ignore next */_sinon2.default.spy();
		var wrapper = /* istanbul ignore next */(0, _enzyme.shallow)(
		/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SearchToolDropdown2.default, /* istanbul ignore next */{
				name: 'TestDropdown',
				toggle: toggle,
				open: false,
				disabled: false },

			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */null, /* istanbul ignore next */'children')));


		var flatButton = wrapper.find( /* istanbul ignore next */_FlatButton2.default);
		flatButton.simulate('click');
		/* istanbul ignore next */_sinon2.default.assert.calledWith(toggle, 'TestDropdown');
		/* istanbul ignore next */_chai2.default.assert.ok(flatButton, 'should contain the Flatbutton child');
		/* istanbul ignore next */_chai2.default.assert.equal(flatButton.node.props.label, 'TestDropdown');
		/* istanbul ignore next */_chai2.default.assert.ok(wrapper.find('p'), 'should render the children(<p> in this case)');
		/* istanbul ignore next */_chai2.default.assert.equal(wrapper.find('p').text(), 'children');
	});
}); // component: