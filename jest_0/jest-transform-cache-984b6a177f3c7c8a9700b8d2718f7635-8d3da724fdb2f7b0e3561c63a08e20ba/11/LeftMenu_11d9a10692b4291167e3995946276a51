/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_meteor = require('meteor/meteor');
var /* istanbul ignore next */_session = require('meteor/session');
var /* istanbul ignore next */_reactMeteorData = require('meteor/react-meteor-data');
var /* istanbul ignore next */_Divider = require('material-ui/Divider'); /* istanbul ignore next */var _Divider2 = _interopRequireDefault(_Divider);
var /* istanbul ignore next */_Drawer = require('material-ui/Drawer'); /* istanbul ignore next */var _Drawer2 = _interopRequireDefault(_Drawer);


var /* istanbul ignore next */_tenants = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/api/collections/tenants'); /* istanbul ignore next */var _tenants2 = _interopRequireDefault(_tenants);


var /* istanbul ignore next */_SideNavTop = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/components/header/SideNavTop'); /* istanbul ignore next */var _SideNavTop2 = _interopRequireDefault(_SideNavTop);
var /* istanbul ignore next */_MenuItem = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/ui/components/shared/MenuItem'); /* istanbul ignore next */var _MenuItem2 = _interopRequireDefault(_MenuItem);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}


/*
                                                                                                                                                                                                                                                                                                        	helpers
                                                                                                                                                                                                                                                                                                        */ // components:
var getUsername = function getUsername(currentUser) {
	var username = '';
	if ( /* istanbul ignore next */_meteor.Meteor.user()) {
		if (currentUser.profile && currentUser.profile.name) {
			username = currentUser.profile.name;
		} else {
			username = currentUser.username;
		}
	}
	return username;
};


/*
   	BEGIN LeftMenu
   */ // api:
var LeftMenu = function LeftMenu( /* istanbul ignore next */_ref) /* istanbul ignore next */{var open = _ref.open,closeLeftMenu = _ref.closeLeftMenu,tenant = _ref.tenant,currentUser = _ref.currentUser;return (
		/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Drawer2.default, /* istanbul ignore next */{
				open: open,
				docked: false,
				onRequestChange: closeLeftMenu,
				className: 'md-sidenav-left' },

			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_SideNavTop2.default, /* istanbul ignore next */{
				currentUser: currentUser,
				username: getUsername(currentUser) }),

			tenant && !tenant.isAnnotation && Roles.userIsInRole( /* istanbul ignore next */_meteor.Meteor.userId(), ['editor', 'admin', 'commenter']) ?
			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null,
				tenant && !tenant.isAnnotation && Roles.userIsInRole( /* istanbul ignore next */_meteor.Meteor.userId(), ['admin']) ?
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: 'http://ahcip-admin.chs.harvard.edu',
					target: '_blank',
					primaryText: 'Admin',
					onClick: closeLeftMenu }) :

				'',
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: '/commentary/create',
					primaryText: 'Add Comment',
					onClick: closeLeftMenu }),

				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: '/keywords/create',
					primaryText: 'Add Keyword/Idea',
					onClick: closeLeftMenu }),

				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Divider2.default, /* istanbul ignore next */null)) :


			'',
			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
				href: '/',
				primaryText: 'Home',
				onClick: closeLeftMenu }),

			tenant && !tenant.isAnnotation &&
			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */null,
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: '/commentary',
					primaryText: 'Commentary',
					onClick: closeLeftMenu }),

				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: '/keywords',
					primaryText: 'Keywords',
					onClick: closeLeftMenu }),

				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: '/keyideas',
					primaryText: 'Key Ideas',
					onClick: closeLeftMenu }),

				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: '/commenters',
					primaryText: 'Commentators',
					onClick: closeLeftMenu }),

				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: '/referenceWorks',
					primaryText: 'Reference Works',
					onClick: closeLeftMenu }),

				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: '/about',
					primaryText: 'About',
					onClick: closeLeftMenu }),

				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: '/#visualizations',
					primaryText: 'Visualizations',
					onClick: closeLeftMenu })),



			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Divider2.default, /* istanbul ignore next */null),

			/* istanbul ignore next */_meteor.Meteor.user() ?
			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null,
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: '/profile',
					primaryText: 'Profile',
					onClick: closeLeftMenu }),

				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: '/sign-out',
					primaryText: 'Sign out',
					onClick: closeLeftMenu })) :



			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null,
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_MenuItem2.default, /* istanbul ignore next */{
					href: '/sign-in',
					primaryText: 'Sign in',
					onClick: closeLeftMenu }))));};





LeftMenu.propTypes = {
	open: /* istanbul ignore next */_react2.default.PropTypes.bool.isRequired,
	closeLeftMenu: /* istanbul ignore next */_react2.default.PropTypes.func.isRequired,
	tenant: /* istanbul ignore next */_react2.default.PropTypes.shape({
		isAnnotation: /* istanbul ignore next */_react2.default.PropTypes.bool.isRequired }),

	currentUser: /* istanbul ignore next */_react2.default.PropTypes.shape({
		profile: /* istanbul ignore next */_react2.default.PropTypes.shape({
			avatarUrl: /* istanbul ignore next */_react2.default.PropTypes.string,
			name: /* istanbul ignore next */_react2.default.PropTypes.string }),

		username: /* istanbul ignore next */_react2.default.PropTypes.string }) };


LeftMenu.defaultProps = {
	tenant: null,
	currentUser: null };

/*
                      	END LeftMenu
                      */ /* istanbul ignore next */exports.default =


/* istanbul ignore next */(0, _reactMeteorData.createContainer)(function () /* istanbul ignore next */{return (
		{
			currentUser: /* istanbul ignore next */_meteor.Meteor.users.findOne({ _id: /* istanbul ignore next */_meteor.Meteor.userId() }),
			tenant: /* istanbul ignore next */_tenants2.default.findOne({ _id: /* istanbul ignore next */_session.Session.get('tenantId') }) });},

LeftMenu);