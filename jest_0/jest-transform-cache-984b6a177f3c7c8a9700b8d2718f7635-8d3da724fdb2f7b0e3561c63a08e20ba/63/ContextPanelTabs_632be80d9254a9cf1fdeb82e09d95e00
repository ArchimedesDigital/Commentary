/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.MetaTabs = exports.EditionTabs = undefined;var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_RaisedButton = require('material-ui/RaisedButton'); /* istanbul ignore next */var _RaisedButton2 = _interopRequireDefault(_RaisedButton);


var /* istanbul ignore next */_utils = require('/Users/Tyler/Desktop/AHCIP/ahcip/imports/lib/utils'); /* istanbul ignore next */var _utils2 = _interopRequireDefault(_utils);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

/*
                                                                                                                                                                                                                                                                           	helpers
                                                                                                                                                                                                                                                                           */
var getEditionTabClass = function getEditionTabClass(selectedLemmaEdition, lemmaTextEdition, index) {
	var normalClass = 'edition-tab tab';
	var selectedClass = 'edition-tab tab selected-edition-tab';

	if (!selectedLemmaEdition.length && index === 0) return selectedClass;
	if (selectedLemmaEdition === lemmaTextEdition.slug) return selectedClass;
	return normalClass;
};

/*
   	BEGIN EditionTabs
   */ // lib:
var EditionTabs = function EditionTabs( /* istanbul ignore next */_ref) /* istanbul ignore next */{var lemmaText = _ref.lemmaText,selectedLemmaEdition = _ref.selectedLemmaEdition,toggleEdition = _ref.toggleEdition;return (
		/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'edition-tabs tabs' },
			lemmaText.map(function (lemmaTextEdition, index) {
				var lemmaEditionTitle = /* istanbul ignore next */_utils2.default.trunc(lemmaTextEdition.title, 20);

				return (
					/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_RaisedButton2.default, /* istanbul ignore next */{
						key: lemmaTextEdition.slug,
						label: lemmaEditionTitle,
						/* istanbul ignore next */'data-edition': lemmaTextEdition.title,
						className: getEditionTabClass(selectedLemmaEdition, lemmaTextEdition, index),
						onClick: toggleEdition.bind(null, lemmaTextEdition.slug) }));


			})));};



EditionTabs.propTypes = {
	lemmaText: /* istanbul ignore next */_react2.default.PropTypes.arrayOf( /* istanbul ignore next */_react2.default.PropTypes.shape({
		title: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired,
		slug: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired })).
	isRequired,
	selectedLemmaEdition: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired,
	toggleEdition: /* istanbul ignore next */_react2.default.PropTypes.func.isRequired };

/*
                                                                                       	END EditionTabs
                                                                                       */


/*
                                                                                          	BEGIN MetaTabs
                                                                                          */
var MetaTabs = function MetaTabs( /* istanbul ignore next */_ref2) /* istanbul ignore next */{var toggleHighlighting = _ref2.toggleHighlighting,highlightingVisible = _ref2.highlightingVisible;return (
		/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'edition-tabs tabs' },
			toggleHighlighting &&
			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_RaisedButton2.default, /* istanbul ignore next */{
				label: 'Highlighting',
				className: 'edition-tab tab',
				onClick: toggleHighlighting,
				backgroundColor: highlightingVisible ? '#795548' : null,
				labelStyle: highlightingVisible ? { color: '#ffffff' } : null })));};















MetaTabs.propTypes = {
	toggleHighlighting: /* istanbul ignore next */_react2.default.PropTypes.func,
	highlightingVisible: /* istanbul ignore next */_react2.default.PropTypes.bool.isRequired };

MetaTabs.defaultProps = {
	toggleHighlighting: null };

/*
                             	END MetaTabs
                             */


/*
                                	BEGIN ContextPanelTabs
                                */
var ContextPanelTabs = function ContextPanelTabs( /* istanbul ignore next */_ref3) /* istanbul ignore next */{var lemmaText = _ref3.lemmaText,selectedLemmaEdition = _ref3.selectedLemmaEdition,toggleEdition = _ref3.toggleEdition,toggleHighlighting = _ref3.toggleHighlighting,highlightingVisible = _ref3.highlightingVisible,editor = _ref3.editor;return (
		/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'lemma-panel-tabs' },

			/* istanbul ignore next */_react2.default.createElement(EditionTabs, /* istanbul ignore next */{
				lemmaText: lemmaText,
				selectedLemmaEdition: selectedLemmaEdition,
				toggleEdition: toggleEdition }),


			!editor &&
			/* istanbul ignore next */_react2.default.createElement(MetaTabs, /* istanbul ignore next */{
				toggleHighlighting: toggleHighlighting,
				highlightingVisible: highlightingVisible })));};





ContextPanelTabs.propTypes = {
	lemmaText: /* istanbul ignore next */_react2.default.PropTypes.arrayOf( /* istanbul ignore next */_react2.default.PropTypes.shape({
		title: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired,
		slug: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired })).
	isRequired,
	selectedLemmaEdition: /* istanbul ignore next */_react2.default.PropTypes.string.isRequired,
	toggleEdition: /* istanbul ignore next */_react2.default.PropTypes.func.isRequired,
	toggleHighlighting: /* istanbul ignore next */_react2.default.PropTypes.func.isRequired,
	highlightingVisible: /* istanbul ignore next */_react2.default.PropTypes.bool.isRequired,

	// requiered if editor:
	editor: /* istanbul ignore next */_react2.default.PropTypes.bool };

ContextPanelTabs.defaultProps = {
	editor: false };

/*
                  	BEGIN ContextPanelTabs
                  */ /* istanbul ignore next */exports.

EditionTabs = EditionTabs; /* istanbul ignore next */exports.MetaTabs = MetaTabs; /* istanbul ignore next */exports.default =
ContextPanelTabs;